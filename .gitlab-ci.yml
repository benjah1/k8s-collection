01_vagrant_up:
  image: kroniak/ssh-client:3.11 
  script:
    - eval $(ssh-agent -s)
    - cat ${PRI_KEY} | ssh-add -
    - export PUB_KEY_VALUE=$(cat ${PUB_KEY})
    - scp -o "StrictHostKeyChecking=no" -r scripts ${REMOTE_SERVER_USER}@${REMOTE_SERVER_HOST}:~/Documents
    - |
      cat <<EOL | ssh -o "StrictHostKeyChecking=no" -tt ${REMOTE_SERVER_USER}@${REMOTE_SERVER_HOST}
      ls &&
      cd Documents &&
      if [ ! -d dotfiles ]; then git clone https://github.com/benjah1/dotfiles.git; fi &&
      if [ -d dotfiles ]; then pushd dotfiles; git pull; popd; fi &&
      bash ./scripts/vagrant_up.sh "${PUB_KEY_VALUE}" &&
      docker ps &&
      exit
      EOL
  when: manual

02_kind_up:
  image: kroniak/ssh-client:3.11 
  script:
    - eval $(ssh-agent -s)
    - cat ${PRI_KEY} | ssh-add -
    - mkdir k8s-cluster/key
    - cp $K8S_CA_KEY k8s-cluster/key/ca.key
    - cp $K8S_CA_CRT k8s-cluster/key/ca.crt
    - scp -o "StrictHostKeyChecking=no" -r k8s-cluster ${REMOTE_VM_USER}@${REMOTE_VM_HOST}:~/Documents
    - |
      cat <<EOL | ssh -o "StrictHostKeyChecking=no" -tt ${REMOTE_VM_USER}@${REMOTE_VM_HOST}
      ls &&
      cd ~/Documents/k8s-cluster &&
      mkdir -p /home/vagrant/kind-data/pki &&
      if [ ! -f /home/vagrant/kind-data/pki/ca.key ]; then cp key/ca.key /home/vagrant/kind-data/pki/ca.key; fi &&
      if [ ! -f /home/vagrant/kind-data/pki/ca.crt ]; then cp key/ca.crt /home/vagrant/kind-data/pki/ca.crt; fi &&
      bash ./cluster_up.sh &&
      docker ps &&
      exit
      EOL
  when: manual

03_terraform_monitoring:
  image: devops:test
  script: 
    - kubectl config set-credentials ben --client-certificate=${K8S_BEN_CRT} --client-key=${K8S_BEN_KEY}
    - kubectl config set-cluster vm --server=https://${REMOTE_VM_HOST}:6443 --insecure-skip-tls-verify=true
    - kubectl config set-context k8s --cluster=vm --user=ben
    - kubectl config use-context k8s
    - kubectl get node
    - cd ./tfworkspace/monitoring
    - cp ../terraform-provider-kubernetes .
    - cat <<EOL | > backend.tf
      terraform {
        backend "kubernetes" {
          secret_suffix = "monitoring"
        }
      }
      EOL
    - terraform init
    - terraform apply
